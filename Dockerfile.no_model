ARG TORCH_HOME=/cache/torch
ARG HF_HOME=/cache/huggingface

FROM python:3.10-slim as dependencies

# Setup venv
RUN python3 -m venv /venv
ARG PATH="/venv/bin:$PATH"
RUN --mount=type=cache,target=/root/.cache/pip pip install --upgrade pip setuptools

# Install requirements
RUN --mount=type=cache,target=/root/.cache/pip pip install torch torchaudio --extra-index-url https://download.pytorch.org/whl/cu118

# Add git
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends git

# Install whisperX
COPY ./whisperX /code
RUN --mount=type=cache,target=/root/.cache/pip pip install /code


FROM python:3.10-slim

# ffmpeg
COPY --link --from=mwader/static-ffmpeg:6.0 /ffmpeg /usr/local/bin/
COPY --link --from=mwader/static-ffmpeg:6.0 /ffprobe /usr/local/bin/

# Copy and use venv
COPY --link --from=dependencies /venv /venv
ARG PATH="/venv/bin:$PATH"
ENV PATH=${PATH}

# Missing dependencies for arm64
RUN if [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
    apt-get install -y --no-install-recommends libgomp1 libsndfile1; \
    fi

ARG TORCH_HOME
ARG HF_HOME
ENV TORCH_HOME=${TORCH_HOME}
ENV HF_HOME=${HF_HOME}

ARG WHISPER_MODEL
ENV WHISPER_MODEL=${WHISPER_MODEL}
ARG LANG
ENV LANG=${LANG}

RUN useradd -m -s /bin/bash 1001 && \
    mkdir -p ${TORCH_HOME} && chown 1001:1001 ${TORCH_HOME} && \
    mkdir -p ${HF_HOME} && chown 1001:1001 ${HF_HOME}
USER 1001
WORKDIR /app

STOPSIGNAL SIGINT
ENTRYPOINT whisperx $@
